<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BlazeSoft.Net.Web</name>
    </assembly>
    <members>
        <member name="T:BlazeSoft.Net.Web.Contract.LanguageHandlerInfo">
            <summary>
            Represents information about a language handler.
            </summary>
        </member>
        <member name="F:BlazeSoft.Net.Web.Contract.LanguageHandlerInfo.Templates">
            <summary>
            A list of templates that the language handler has defined.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.LanguageHandlerInfo.ID">
            <summary>
            Gets or sets the ID of the language handler.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.LanguageHandlerInfo.FileExtension">
            <summary>
            Gets or sets the file extension of the language.
            
            Example:
                CSharp = .cs
                VBasic = .vb
                Python = .py
                Ruby   = .rb
            </summary>
        </member>
        <member name="T:BlazeSoft.Net.Web.Contract.LanguageHandlerTemplate">
            <summary>
            Represents generic templates for a language.
            </summary>
        </member>
        <member name="F:BlazeSoft.Net.Web.Contract.LanguageHandlerTemplate.RequiredReferences">
            <summary>
            A list of all of the references that the template should have by default.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.LanguageHandlerTemplate.ID">
            <summary>
            Gets or sets the ID of the language handler template.
            
            Example:
                Page
                Module
                Language Handler
                
                Class
                Interface
                
                Singleton
                Factory
                etc.
                
            
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.LanguageHandlerTemplate.Data">
            <summary>
            Gets or sets the code for the template. 
            When writing a template for a class you can use {0} to specify the name.
            
            Example:
                class {0}():
                __init__(self):
                    pass
                    
                If the user passed in MyClass as the name when creating a class the generated code would result:
            
                class MyClass():
                    __init__(self):
                        pass
            </summary>
        </member>
        <member name="T:BlazeSoft.Net.Web.Contract.ModuleClass">
            <summary>
            Represents a class inside of a module.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.ModuleClass.Name">
            <summary>
            Gets or sets the class name.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.ModuleClass.Data">
            <summary>
            Gets or sets the class code.
            </summary>
        </member>
        <member name="T:BlazeSoft.Net.Web.Contract.ModuleReversion">
            <summary>
            Represents a revision of a module.
            </summary>
        </member>
        <member name="F:BlazeSoft.Net.Web.Contract.ModuleReversion.Classes">
            <summary>
            A list of classes inside of the module reversion.
            </summary>
        </member>
        <member name="M:BlazeSoft.Net.Web.Contract.ModuleReversion.ToString">
            <summary>
            Serializes the data into a XML string to store in the Blaze Module Reversion files.
            </summary>
            <returns>Returns a serialized XML string.</returns>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.ModuleReversion.Version">
            <summary>
            Gets or sets the version of the module reversion.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.ModuleReversion.Updated">
            <summary>
            Gets or sets when the module reversion was last updated,
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.ModuleReversion.Message">
            <summary>
            Gets or sets the message associated with the module reversion.
            </summary>
        </member>
        <member name="M:BlazeSoft.Net.Web.Link.SystemLink.TryCompilePage(System.Object)">
            <summary>
            Tries to compile a page to any possible return errors. 
            This method does not save the page like <see cref="M:BlazeSoft.Net.Web.Link.SystemLink.UpdatePage(System.Object)"/>.
            </summary>
            <param name="pageObject"></param>
            <returns></returns>
        </member>
        <member name="T:BlazeSoft.Net.ThirdParty.JsonArray">
            <summary>
            Represents the json array.
            </summary>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.JsonArray.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazeSoft.Net.ThirdParty.JsonArray"/> class. 
            </summary>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.JsonArray.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:BlazeSoft.Net.ThirdParty.JsonArray"/> class. 
            </summary>
            <param name="capacity">The capacity of the json array.</param>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.JsonArray.ToString">
            <summary>
            The json representation of the array.
            </summary>
            <returns>The json representation of the array.</returns>
        </member>
        <member name="T:BlazeSoft.Net.ThirdParty.JsonObject">
            <summary>
            Represents the json object.
            </summary>
        </member>
        <member name="F:BlazeSoft.Net.ThirdParty.JsonObject._members">
            <summary>
            The internal member dictionary.
            </summary>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.JsonObject.Add(System.String,System.Object)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.JsonObject.ContainsKey(System.String)">
            <summary>
            Determines whether the specified key contains key.
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the specified key contains key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.JsonObject.Remove(System.String)">
            <summary>
            Removes the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.JsonObject.TryGetValue(System.String,System.Object@)">
            <summary>
            Tries the get value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.JsonObject.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.JsonObject.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.JsonObject.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Determines whether [contains] [the specified item].
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if [contains] [the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.JsonObject.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.JsonObject.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Removes the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.JsonObject.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.JsonObject.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.JsonObject.ToString">
            <summary>
            Returns a json <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A json <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.JsonObject.TryConvert(System.Dynamic.ConvertBinder,System.Object@)">
            <summary>
            Provides implementation for type conversion operations. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for operations that convert an object from one type to another.
            </summary>
            <param name="binder">Provides information about the conversion operation. The binder.Type property provides the type to which the object must be converted. For example, for the statement (String)sampleObject in C# (CType(sampleObject, Type) in Visual Basic), where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, binder.Type returns the <see cref="T:System.String"/> type. The binder.Explicit property provides information about the kind of conversion that occurs. It returns true for explicit conversion and false for implicit conversion.</param>
            <param name="result">The result of the type conversion operation.</param>
            <returns>
            Alwasy returns true.
            </returns>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.JsonObject.TryDeleteMember(System.Dynamic.DeleteMemberBinder)">
            <summary>
            Provides the implementation for operations that delete an object member. This method is not intended for use in C# or Visual Basic.
            </summary>
            <param name="binder">Provides information about the deletion.</param>
            <returns>
            Alwasy returns true.
            </returns>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.JsonObject.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
            <summary>
            Provides the implementation for operations that get a value by index. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for indexing operations.
            </summary>
            <param name="binder">Provides information about the operation.</param>
            <param name="indexes">The indexes that are used in the operation. For example, for the sampleObject[3] operation in C# (sampleObject(3) in Visual Basic), where sampleObject is derived from the DynamicObject class, <paramref name="indexes"/> is equal to 3.</param>
            <param name="result">The result of the index operation.</param>
            <returns>
            Alwasy returns true.
            </returns>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.JsonObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            Provides the implementation for operations that get member values. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for operations such as getting a value for a property.
            </summary>
            <param name="binder">Provides information about the object that called the dynamic operation. The binder.Name property provides the name of the member on which the dynamic operation is performed. For example, for the Console.WriteLine(sampleObject.SampleProperty) statement, where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, binder.Name returns "SampleProperty". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param>
            <param name="result">The result of the get operation. For example, if the method is called for a property, you can assign the property value to <paramref name="result"/>.</param>
            <returns>
            Alwasy returns true.
            </returns>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.JsonObject.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
            <summary>
            Provides the implementation for operations that set a value by index. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for operations that access objects by a specified index.
            </summary>
            <param name="binder">Provides information about the operation.</param>
            <param name="indexes">The indexes that are used in the operation. For example, for the sampleObject[3] = 10 operation in C# (sampleObject(3) = 10 in Visual Basic), where sampleObject is derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, <paramref name="indexes"/> is equal to 3.</param>
            <param name="value">The value to set to the object that has the specified index. For example, for the sampleObject[3] = 10 operation in C# (sampleObject(3) = 10 in Visual Basic), where sampleObject is derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, <paramref name="value"/> is equal to 10.</param>
            <returns>
            true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.
            </returns>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.JsonObject.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>
            Provides the implementation for operations that set member values. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for operations such as setting a value for a property.
            </summary>
            <param name="binder">Provides information about the object that called the dynamic operation. The binder.Name property provides the name of the member to which the value is being assigned. For example, for the statement sampleObject.SampleProperty = "Test", where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, binder.Name returns "SampleProperty". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param>
            <param name="value">The value to set to the member. For example, for sampleObject.SampleProperty = "Test", where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, the <paramref name="value"/> is "Test".</param>
            <returns>
            true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.)
            </returns>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.JsonObject.GetDynamicMemberNames">
            <summary>
            Returns the enumeration of all dynamic member names.
            </summary>
            <returns>
            A sequence that contains dynamic member names.
            </returns>
        </member>
        <member name="P:BlazeSoft.Net.ThirdParty.JsonObject.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Object"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:BlazeSoft.Net.ThirdParty.JsonObject.Keys">
            <summary>
            Gets the keys.
            </summary>
            <value>The keys.</value>
        </member>
        <member name="P:BlazeSoft.Net.ThirdParty.JsonObject.Values">
            <summary>
            Gets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="P:BlazeSoft.Net.ThirdParty.JsonObject.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="P:BlazeSoft.Net.ThirdParty.JsonObject.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:BlazeSoft.Net.ThirdParty.JsonObject.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value>
            	<c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:BlazeSoft.Net.ThirdParty.SimpleJson">
            <summary>
            This class encodes and decodes JSON strings.
            Spec. details, see http://www.json.org/
            
            JSON uses Arrays and Objects. These correspond here to the datatypes JsonArray(IList&lt;object>) and JsonObject(IDictionary&lt;string,object>).
            All numbers are parsed to doubles.
            </summary>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.SimpleJson.DeserializeObject(System.String)">
            <summary>
            Parses the string json into a value
            </summary>
            <param name="json">A JSON string.</param>
            <returns>An IList&lt;object>, a IDictionary&lt;string,object>, a double, a string, null, true, or false</returns>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.SimpleJson.TryDeserializeObject(System.String,System.Object@)">
            <summary>
            Try parsing the json string into a value.
            </summary>
            <param name="json">
            A JSON string.
            </param>
            <param name="obj">
            The object.
            </param>
            <returns>
            Returns true if successfull otherwise false.
            </returns>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.SimpleJson.SerializeObject(System.Object,BlazeSoft.Net.ThirdParty.IJsonSerializerStrategy)">
            <summary>
            Converts a IDictionary&lt;string,object> / IList&lt;object> object into a JSON string
            </summary>
            <param name="json">A IDictionary&lt;string,object> / IList&lt;object></param>
            <param name="jsonSerializerStrategy">Serializer strategy to use</param>
            <returns>A JSON encoded string, or null if object 'json' is not serializable</returns>
        </member>
        <member name="M:BlazeSoft.Net.ThirdParty.SimpleJson.IsNumeric(System.Object)">
            <summary>
            Determines if a given object is numeric in any way
            (can be integer, double, null, etc).
            </summary>
        </member>
        <member name="T:BlazeSoft.Net.Web.Contract.Module">
            <summary>
            Represents a module.
            </summary>
        </member>
        <member name="F:BlazeSoft.Net.Web.Contract.Module.References">
            <summary>
            A list of references that this module uses.
            </summary>
        </member>
        <member name="M:BlazeSoft.Net.Web.Contract.Module.CompileClasses">
            <summary>
            Compiles all of the <see cref="T:BlazeSoft.Net.Web.Contract.ModuleClass"/> inside of this module.
            </summary>
            <returns>Returns whether or not this module compiled successfully.</returns>
        </member>
        <member name="M:BlazeSoft.Net.Web.Contract.Module.CompileClasses(System.Boolean,System.String[])">
            <summary>
            Compiles all of the <see cref="T:BlazeSoft.Net.Web.Contract.ModuleClass"/> inside of this module.
            </summary>
            <param name="copyCompiledCode"></param>
            <param name="definitions"></param>
            <returns>Returns whether or not this module compiled successfully.</returns>
        </member>
        <member name="M:BlazeSoft.Net.Web.Contract.Module.CompileClasses(System.CodeDom.Compiler.CompilerErrorCollection@)">
            <summary>
            Compiles all of the <see cref="T:BlazeSoft.Net.Web.Contract.ModuleClass"/> inside of this module.
            </summary>
            <param name="compilerErrorCollection">The collection of errors generated by compiling.</param>
            <returns>Returns whether or not this module compiled successfully.</returns>
        </member>
        <member name="M:BlazeSoft.Net.Web.Contract.Module.GenerateSignature(System.Byte[])">
            <summary>
            Generates a unique signature for this module.
            </summary>
            <param name="privateKey">The private key that only the developer of this module should know.</param>
            <returns>Returns whether or not the signature of the module was successfully generated.</returns>
        </member>
        <member name="M:BlazeSoft.Net.Web.Contract.Module.VerifySignature">
            <summary>
            Checks whether or not the signatue of this module is valid.
            </summary>
            <returns>Returns a whether or not the signature of this module is valid.</returns>
        </member>
        <member name="M:BlazeSoft.Net.Web.Contract.Module.Save">
            <summary>
            Saves this module on the file system and sets <see cref="P:BlazeSoft.Net.Web.Contract.Module.IsChanged"/> to false.
            </summary>
        </member>
        <member name="M:BlazeSoft.Net.Web.Contract.Module.ToString">
            <summary>
            Serializes the instance of this module into an XML string.
            </summary>
            <returns>Returns a serialized XML string of this module.</returns>
        </member>
        <member name="M:BlazeSoft.Net.Web.Contract.Module.FromString(System.String)">
            <summary>
            Creates an instance of a module from a serialized XML string.
            </summary>
            <param name="moduleData">A serialized XML string.</param>
            <returns>Returns an instance of a module.</returns>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.Module.IsChanged">
            <summary>
            Gets or sets whether or not this module has been changed.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.Module.DependencyPath">
            <summary>
            Gets the path where all of the depencies for this module should be located.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.Module.ID">
            <summary>
            Gets or sets the ID of this module.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.Module.Locked">
            <summary>
            Gets or sets whether or not this module can be altered.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.Module.Global">
            <summary>
            Gets or sets whether or not this module will be loaded into every page.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.Module.LanguageHandler">
            <summary>
            Gets or sets the language handler information for this module. 
            This is only used by modules that are language handlers.
            
            At this point in time it is unknown whether this implementation will stay.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.Module.PublicKey">
            <summary>
            Gets or sets the public key for this module.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.Module.Signature">
            <summary>
            Gets or sets the public key for the signature for this module.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.Module.CompiledCode">
            <summary>
            Gets or sets the compiled code for this module.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.Module.CompiledCodeSymbols">
            <summary>
            Gets or sets the compiled code symbols for this module.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.Module.CompilerLanguage">
            <summary>
            Gets or sets the compiler language for this module.
            
            Example:
                CSharp
                VisualBasic
                Python
                
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.Module.AssemblyName">
            <summary>
            Gets or sets the assembly name for this module.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.Module.LatestReversion">
            <summary>
            Gets or sets the latest <see cref="T:BlazeSoft.Net.Web.Contract.ModuleReversion"/> of this module.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.Module.Assembly">
            <summary>
            Gets the assembly generated from this module.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.Module.Type">
            <summary>
            Gets the type of this module.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.Module.LanguageHandlerType">
            <summary>
            Gets the language handler type of this module.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.Module.Instance">
            <summary>
            Gets an instance of this module.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.Module.LanguageHandlerInstance">
            <summary>
            Gets an instance of this module as a language handler.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.Module.IsSystemSigned">
            <summary>
            Gets whether or not the module is signed by the system.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Contract.Module.IsSigned">
            <summary>
            Gets whether or not the module is signed.
            </summary>
        </member>
        <member name="T:BlazeSoft.Net.Web.Utilities">
            <summary>
            Represents utilities to make everyone's life a little easier.
            </summary>
        </member>
        <member name="M:BlazeSoft.Net.Web.Utilities.NewRandomByteArray(System.Int32)">
            <summary>
            Generates a random byte array.
            </summary>
            <param name="length">Length of the random byte array to be returned.</param>
            <returns>A random byte array.</returns>
        </member>
        <member name="M:BlazeSoft.Net.Web.Utilities.NewRandomString(System.Int32,System.String)">
            <summary>
            Generates a random string.
            </summary>
            <param name="length">Length of the random string to be returned. The default value is 6.</param>
            <param name="characters">Characters to generate the random string from.</param>
            <returns>A random string.</returns>
        </member>
        <member name="T:BlazeSoft.Net.Web.Utilities.Verification">
            <summary>
            
            </summary>
        </member>
        <member name="M:BlazeSoft.Net.Web.Utilities.Verification.VerifyEmail(System.String)">
            <summary>
            Checks if an email is a valid email.
            </summary>
            <param name="email">Email to be verified.</param>
            <returns>Whether or not the email passed in was a valid email.</returns>
        </member>
        <member name="M:BlazeSoft.Net.Web.PublicClassExtentions.write(System.IO.Stream,System.Object)">
            <summary>
            Writes instance of an object to the stream.
            </summary>
            <param name="stream"></param>
            <param name="instance">Instance of object to write to stream.</param>
        </member>
        <member name="T:BlazeSoft.Net.Web.Debug">
            <summary>
            Represents the debug utility.
            </summary>
        </member>
        <member name="M:BlazeSoft.Net.Web.Debug.WriteLine(System.Object,System.Object[])">
            <summary>
            Writes a line of text to the debug console.
            </summary>
            <param name="textObject">Line of text to write to debug console.</param>
            <param name="parameters">Parameters to be replaced in text.</param>
        </member>
        <member name="M:BlazeSoft.Net.Web.Debug.Write(System.Object,System.Object[])">
            <summary>
            Writes text to the debug console.
            </summary>
            <param name="textObject">Text to write to the debug console.</param>
            <param name="parameters">Parameters to be replaced in text.</param>
        </member>
        <member name="M:BlazeSoft.Net.Web.Debug.StartTimer(System.String)">
            <summary>
            Starts the specified timer.
            </summary>
            <param name="name">Name of the timer.</param>
        </member>
        <member name="M:BlazeSoft.Net.Web.Debug.StopTimer(System.String)">
            <summary>
            Stops the specified timer.
            </summary>
            <param name="name">Name of the timer.</param>
        </member>
        <member name="P:BlazeSoft.Net.Web.Theme.Templates">
            <summary>
            Returns a list of templates installed in the Themes directory.
            </summary>
        </member>
        <member name="T:BlazeSoft.Net.Web.Page">
            <summary>
            Represents the page interface.
            </summary>
        </member>
        <member name="F:BlazeSoft.Net.Web.Page.Http">
            <summary>
            Returns the HttpContext for this page.
            </summary>
        </member>
        <member name="F:BlazeSoft.Net.Web.Page.Request">
            <summary>
            Returns the current HttpRequest for this page.
            </summary>
        </member>
        <member name="F:BlazeSoft.Net.Web.Page.Response">
            <summary>
            Returns the current HttpResponse for this page.
            </summary>
        </member>
        <member name="F:BlazeSoft.Net.Web.Page.Server">
            <summary>
            Returns the HttpServerUtility for this page.
            </summary>
        </member>
        <member name="F:BlazeSoft.Net.Web.Page.Themes">
            <summary>
            Returns a link object to provide access to Themes.
            </summary>
        </member>
        <member name="F:BlazeSoft.Net.Web.Page.Settings">
            <summary>
            Returns a link object to provide access to Settings.
            </summary>
        </member>
        <member name="F:BlazeSoft.Net.Web.Page.Modules">
            <summary>
            Returns a link object to provide access to Modules.
            </summary>
        </member>
        <member name="F:BlazeSoft.Net.Web.Page.Pages">
            <summary>
            Returns a link object to provide access to Pages.
            </summary>
        </member>
        <member name="F:BlazeSoft.Net.Web.Page.System">
            <summary>
            Returns a link object to provide access to System.
            </summary>
        </member>
        <member name="M:BlazeSoft.Net.Web.Page.#ctor">
            <summary>
            Sets this pages globals.
            </summary>
        </member>
        <member name="M:BlazeSoft.Net.Web.Page.Initialize">
            <summary>
            Initializes this page.
            </summary>
        </member>
        <member name="M:BlazeSoft.Net.Web.Page.Deinitialize">
            <summary>
            Deinitializes this page.
            </summary>
        </member>
        <member name="M:BlazeSoft.Net.Web.Page.GetOutput">
            <summary>
            
            </summary>
            <returns>Returns output for this page.</returns>
        </member>
        <member name="T:BlazeSoft.Net.Web.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:BlazeSoft.Net.Web.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
